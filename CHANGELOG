Changes by version:
===================

0.8.0-3
=======
Fix race condition in connection pool. https://github.com/rantav/hector/issues/257
Reduce default size of ByteBufferOutputStream to 256 from 8196 bytes, https://github.com/rantav/hector/issues/268
ObjectSerializer can take a custom ClassLoader, https://github.com/rantav/hector/issues/134
Move EmbeddedSchemaLoader and EmbeddedServerHelper into the hector-test module, https://github.com/rantav/hector/issues/223
- hector-core depends only on cassandra-thrift, not cassandra-all
- Remove dependencies on avro, high-scale-lib 
Threads started by hector are daemon threads, https://github.com/rantav/hector/issues/220
Fixed speed4j setup - modified hector so it only uses speed4j.properties to configure logging.  the logger
  name must be of the form "hector-<cluster-name>".  Updating wiki page as well.

0.8.0-2
=======
Synchronize on RR balancing policy counter
Added key_validation_class support on CfDef wrappers
Fixed issue with using correct timestamp on execution result which could manifest as order of magnitude differences in op timing in some cases
Added remove method to retry service, ensures that HConnectionManager.removeHost correctly pulls hosts from CassandraHostRetryService if configured. Addresses GH issue 216
Expose setters in ColumnFamilyDefinition iface
Added option to wait for schema agreements on cluster operations
Check for null on keys in a list. Addresses issue 221
Addressing issue 226 on gh where attempts to release on suspended pools will leak clients
Fixed issue with using BB serializer for BA serializer as pointed out by @bhuvan.rajt on ML
Wrapper api for op timers (makes current speed4j implementation plugable). The default logger is no a nulllogger, so op timing is off by default (sbridges)
Tweaks to retry down host logic including: immediate check when triggered, and retrying all downed hosts. See issue 238 for details (sbridges)
Fix potential race condition in numBlocked if an exception was thrown creating a thrift client (sbridges)

0.8.0-1
=======
CQL queries available via CqlQuery
Removed openjpa and JPA 2.0 targeted code; still using JPA influenced annotations.
Reset to the results of adding the pool to the connection manager. This could cause a pretty ugly issue where the host would just disappear if there was a failure adding it back after the successful test.
Fixed retry logic in the case of fail after one more try configuration. Also modifies some long standing (and I believe incorrect) behaviour of trying until successful on a timeout exception.
Adding recommended default configuration string for dynamic comparator 
First cut of CqlQuery, loosened OrderedRowsImpl to hornshoe in results 
CfDef.key_validation_class support (michaelsembwever)
Expose memtable throughput, operations, flush and key cache save period (Greg Hinkle)
Counter super slice support (Greg Hinkle)
Multiget Counter Slice and super slice (Greg Hinkle)
Support replicate_on_write setting for column families (Greg Hinkle)

0.7.0-27
========
Execution time is now actually in micro seconds. Thanks to several folks for pointing this out. 
Added IO stream mutators. Thanks to Norman Maurer for the pull request.
Added method to HFactory for safe shutdown of cluster
Added suspend/unsuspend operations to HConnectionManager, operations for suh in JMX
Cleanup of numActive counter on ConcurrentHClientPool. Could cause negative results under some high-load situations. Thanks to Yang Yang for the tip.
fix NPE with poolExhaustedException. Thanks to Yang Yang for the tip
Fixed issue with ttl not being set on result columns. Thanks to ML user Kallin for the heads up. 

0.7.0-26
========
Fix issue with NPE in ThriftColumnDef when a column name was declared with no index type (thanks to Steve Willcox for the heads up)
Mutator has easier row level deletion methods
Fix potential race condition in ConcurrentHClientPool with large number of threads. https://github.com/rantav/hector/issues#issue/136 (Thanks to @masseyke for the test case)
LeastActive policy updated to shuffle before selection. This spreads load out better among pools in low to moderate traffic environments (ie. when ConcurrentHClientPool#getNumActive are all equal). 
Fix NPE in checking that cassandraHostRetryService is turned when host is being marked down (thanks to ML poster Shimi for bug report)
A CassandraClientMonitor instance is now created per cluster to make JMX integration with multi-cluster setups much easier. (https://github.com/rantav/hector/issues/issue/137)


0.7.0-25
========
Fix potential underflow issue with IntegerSerializer and small ints comming back from Cassandra in two bytes
Fix issue with RR Load balancing policy that cause ArrayOutOfBounds.. in some situations

0.7.0-24
========
Fixed issue with null keyspaces and credentials in HConnectionManager (via Michael Moores)
Added class-level default for failoverPolicy 
Rudimentary (very much so) JPA 2.0 support for save and load via openjpa
Ligthweight ORM for JPA 1.0 annotations (additional improvements to BTodd's hector-object-mapper merged in)
Some cleanup of bytebuffer handling in serializers
Initial cut at virtual keyspaces (aka client-level multi-tenancy), see https://github.com/rantav/hector/wiki/Virtual-Keyspaces
CassandraHostConfigurator and related are now all correctly serializable (patch by Thor Carpenter)
Added add/remove CassandraHost capability to CassandraClientMonitor (thanks to David Boxenhorn for poiting out it was missing)
CassandraHostRetryService default queue size now defaults unbounded

0.7.0-23
========
Initial import of BToddB's hector-object-mapper as object-mapper module
Object mapper ported over to JPA annotations and EntityManager (very redimentary support)
Fix issue with createKeyspace requiring additional column info
Massive changes to pom structure courtesy of Stephen Connolly to facilitate inclusion into maven central repository. 
Small tweaks to HConnectionManager courtesy of Benoit Perroud
Collection conversions in AbstractSerializer use the size of the provided collection for initialization. Patch courtesy of Benoit Perroud. 
Treat HUnavailableException the same as HTimeoutException

0.7.0-22
========
Fix issue with LeastActiveBalancingPolicy that favoured same host repeatedly
Define ClockResolution as an Interface to allow client to define their own implementations
Added TimeUUID support (me.prettyprint.cassandra.utils.TimeUUIDUtils)
Added updateColumnFamily to Cluster 
Shorterm fix for catching InvalidRequestException and handling it correctly for a bootstraping node


0.7.0-21
========
CassandraHostConfigurator is now serializable
Split the project to hector-core
Added removeCassandraHost on HConnectionManager for graceful shutdown of a pool
Configuration of load balancing policy is now done on CassandraHostConfigurator
KnownHosts and per-pool stats are once again available via JMX
Minor logging tweaks to make logging levels more appropriate
Added overloaded version of createColumn (contributed by Michael Moores)


0.7.0-20
========
Added authentication support (contributed by Jim Ancona)
Cleaner abstraction for schema modifications (contributed by Peter Harrison)
- ddl package added
- wrapper classes and interfaces for abstracting protocol
RangeSlicesQuery now supports setRowCount for limiting results to a number of rows


0.7.0-19
========
Fix issue http://github.com/rantav/hector/issues#issue/74 with fix suggested by Patricio Echague
CassandraHostRetry service will retry downed hosts in a background thread at the interval specified on CassandraHostConfigurator (on by default at 30sec interval)
Refactoring of the connection pooling innards to fix epic race condition on failover. This includes but is not limited to:
- Removal of classes effectively matching the pattern CassandraClient* from the service package
- Command is gone. It was no longer needed and was more confusing than anything else
- Pooling logic has been stress tested by a neutral third party (no, really!)
Upgrade to thrift 0.5 to match Cassandra (it caught us by surprise as well). 
The system_rename_* methods were removed matching removal of such in Thrift API
Microsecond level granularity is now the default
NodeAutoDiscoverService will periodically look for new hosts on the ring and add them (off by default)


0.7.0-17
========
Add CountQuery, SuperCountQuery and SubCountQuery
Move all the API stuff to me.prettyprint.hector.api.*. Extract interfaces and prepare the ground for more avro good.
 - Move all the queries and extract their interfaces
 - Rename KeyspaceOperator and extract a Keyspace interface from it
Rename a few exceptions to begin with HSomething so they are hard to unintentionally mix with their thrift doubles.
Bug fixes:
 CassandraClientPoolByHostImpl can throw NoSuchElementException 
 KeyspaceImpl.toString returns super.toString()
 API V2 has no means of getting all columns from a row.
 KeyspaceOperator throws NPE that masks real exceptions
 Timestamp (and Clock in 0.7.0) are not set on HColumn in the constructor
 Friendlier API and spring integration
 Error in failover - incorrect operation when borrowClient throws an 
 batchMutate doesn't work with null predicate in deletion. Cannot batch-delete rows.
 getSuperColumn() does not return null
 KeyspaceImpl.getSuperColumn() should use cassandra.get() and not cassandra.get_slice()



0.6.0-15
========
Add a few more public settings to pass over to GenericObjectPool: lifo, minEvictableIdleTimeMillis and timeBetweenEvictionRunsMillis (contributed by B. Todd Burruss)
Remove some unused meta calls from CassandraClient, such as getConfigFile and getStringProperty
Make the calls of other meta API go through CassandraCluster and by that use an improved version of them in thrift and failover (http://github.com/rantav/hector/issues#issue/11 and http://github.com/rantav/hector/issues#issue/7 and http://github.com/rantav/hector/issues#issue/29)
Add an exception hierarchy to wrap transport and general cassandra API exceptions http://github.com/rantav/hector/issues#issue/32
Make HectorException extend RuntimeException
Add the port number to be part of the cassandra host identifier so that many cassandra instances can be connected from a single hector client, http://github.com/rantav/hector/issues/issue/37/#comment_278773
Fix bogus doubly locked initialization in CassandraClientPoolFactory
Fix http://github.com/rantav/hector/issues/issue/48 KeyspaceImpl.getSuperColumn() should use cassandra.get() and not cassandra.get_slice()
Allow CassandraClientPool to provide settings from CassandraHostConfigurator to new hosts if it was configured from such. http://github.com/rantav/hector/issues/issue/47
Fix http://github.com/rantav/hector/issues#issue/50 getSuperColumn() does not return null
New and fancy API. We call this API v2 beta b/c we want to collect feedback from the commumnity before finalizing it


0.6.0-14
========
Add getRangeSuperSlices http://github.com/rantav/hector/issues/#issue/38
Add Command.execute that accepts a configurable FailoverPolicy
Improve maven build file

0.6.0-13
========
Fix duplicate host entries and two connection pools to the same host http://github.com/rantav/hector/issues/closed#issue/37
Make loading hectorLog4j.xml optional, controlled by system property com.prettyprint.cassandra.load_hector_log4j http://github.com/rantav/hector/issues/closed#issue/36
Fix - JMX counter NumActive isn't reporting a correct num http://github.com/rantav/hector/issues/closed#issue/33
Chagne the name of the perf4 logger to be me.prettyprint.hector.TimingLogger
Fix duplicate releases of clients when failing over to next host and connection leaking (no bug, was introduced by recent refactors)
Improve failover - if the current host isn't in the list of known hosts, just failover to any random known host, don't give up
Fix perf4j logger name so perf stats will actually work
added overloaded remove for user specified timestamps
Add @deprecated to getRangeSlice
Add CassandraClientPool.getMbean
Make Keyspace.createTimestamp public
Change default DEFAULT_MAX_IDLE to -1

0.6.0-12
========
Timestampes are currently in milliseconds, should be microseconds http://github.com/rantav/hector/issues/closed#issue/28
getPackage() MAY return a null at JmxMonitor constructor. http://github.com/rantav/hector/issues/closed#issue/26
Change default consistency level to QUORUM from DCQUOROM http://github.com/rantav/hector/issues#issue/30


